#!/usr/bin/env phantomjs

// casperjs setup
var fs = require("fs");
phantom.casperPath = fs.workingDirectory + "/../..";
phantom.injectJs(phantom.casperPath + '/bin/bootstrap.js');

var casper = require("casper").create({
    verbose: true
});
var marked = require('./lib/marked');
var config = JSON.parse(fs.read("config.json"));
var templateUrl = 'file://' + fs.workingDirectory + '/' + config.template;
var selectors = {};

// this is specific to casperjs project: versioning hell removal
if (typeof config.context === "object" && !config.context.version) {
    config.context.version = phantom.casperVersion;
}

Object.keys(config.sources).forEach(function(selector) {
    var src = config.sources[selector];
    casper.echo('Selector "'+ selector + '": converting source ' + src);
    try {
        var content = fs.read(src), action = 'Included';
        if (/\.md$/.test(src)) {
            action = 'Converted';
            content = marked(content);
        }
        selectors[selector] = content;
        casper.echo(action + ' ' + src);
    } catch (e) {
        casper.echo('Skipped ' + src + ': ' + e, 'COMMENT');
    }
});

casper.start(templateUrl, function() {
    this.echo('Opening template: ' + templateUrl);
    this.evaluate(function(selectors) {
        Object.keys(selectors).forEach(function(selector) {
            document.querySelector(selector).innerHTML = selectors[selector];
        });
    }, { selectors: selectors });
});

casper.then(function() {
    var pageContent = this.page.content;
    var target = null;
    Object.keys(config.context).forEach(function(p) {
        var re = new RegExp('\\{{2}\s?' + p + '\s?\\}{2}', 'gim');
        pageContent = pageContent.replace(re, config.context[p]);
    });
    if (config.target) {
        target = config.target;
    } else {
        target = this.cli.get(0) || "output.html";
    }
    this.echo('Saving to ' + target);
    fs.write(target, pageContent, "w");
    this.echo('Saved to ' + target);
});

casper.run(function() {
    this.echo('All done.', 'INFO').exit();
});
